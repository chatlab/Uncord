<Page
    x:Class="Uncord.Views.TextChannelPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Uncord.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:uwpcontrol="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:Uncord.Views.Behaviors"
    xmlns:messageControl="using:Uncord.Views.Controls.Message"
    xmlns:tookitext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:prismMvvm="using:Prism.Windows.Mvvm"
    prismMvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="MessageTemplate" >
            <Border Padding="8 8 8 8" 
                    BorderBrush="{StaticResource TextBoxDisabledBorderThemeBrush}"
                    BorderThickness="0 0 0 1"
                    >
                <messageControl:MessageControl />
            </Border>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="InvalidDataContext">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsInvalidTextChannel, Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="InvalidLayout.Visibility" Value="Visible" />
                        <Setter Target="ContentLayout.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ValidDataContext">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>

            <VisualStateGroup x:Name="MenuIconMarginStateGroup">

                <!-- 大画面 -->
                <VisualState x:Name="LargeMonitor">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeMinWidth}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="TopBarLayout.Margin" Value="40 8 0 8" />
                    </VisualState.Setters>
                </VisualState>

                <!-- 中画面 -->
                <VisualState x:Name="MiddleMonitor">

                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MidiumMinWidth}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="TopBarLayout.Margin" Value="40 8 0 8" />
                    </VisualState.Setters>
                </VisualState>

                <!-- 720pxより小さい画面はデフォルト値として指定します -->

            </VisualStateGroup>

            
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="InvalidLayout"
              Visibility="Collapsed"
              >
            <TextBlock Text="Invalid Text Channel" />
        </Grid>

        <Grid x:Name="ContentLayout">


            <toolkit:DockPanel >

                <toolkit:DockPanel Margin="64 8 0 8"
                        toolkit:DockPanel.Dock="Top"
                        x:Name="TopBarLayout"
                        >

                    <StackPanel toolkit:DockPanel.Dock="Right">
                    </StackPanel>
                    
                    <Border toolkit:DockPanel.Dock="Bottom">
                        <ProgressBar IsIndeterminate="True"
                                     Visibility="{Binding NowMessageLoading.Value, Converter={StaticResource BoolToVisibilityConverter}}"
                                     >
                            
                        </ProgressBar>
                        
                    </Border>

                    <TextBlock Style="{StaticResource SubheaderTextBlockStyle}"
                           Margin="0 0 0 0"
                               VerticalAlignment="Center"
                           >
                        #<Run Text="{Binding Name}" />
                    </TextBlock>
                    
                </toolkit:DockPanel>


                
                <Border toolkit:DockPanel.Dock="Bottom"
                        BorderBrush="{StaticResource TextBoxDisabledBorderThemeBrush}"
                        BorderThickness="0 1 0 0"
                        Padding="0 16"
                        Margin="16 0"
                        >
                    <toolkit:DockPanel x:Name="SendMessageLayout">

                        <Border toolkit:DockPanel.Dock="Left"
                                Margin="8"                                
                                Visibility="Collapsed"
                                >
                            <Button Command="{Binding PickAndSendFileCommand}"
                                    Background="Transparent"
                                    >
                                <SymbolIcon Symbol="Upload" />
                            </Button>
                        </Border>

                        <Border toolkit:DockPanel.Dock="Right"
                                Margin="8"
                                Visibility="Collapsed"
                                >
                            <!-- TODO: Emotes (Flyout?) -->
                            <Button Background="Transparent"
                                    IsEnabled="False"
                                >
                                <SymbolIcon Symbol="Emoji2" />
                            </Button>
                        </Border>

                        <Border toolkit:DockPanel.Dock="Right"
                                Margin="8 0"
                                
                                >
                            <Button Background="Transparent"
                                    Command="{Binding SendMessageCommand}"
                                    Height="40"
                                    MinWidth="80"
                                >
                                <Button.Content>
                                    <Binding Source="SubmitMessage" 
                                                 Converter="{StaticResource ResourceNameToResourceStringConverter}"
                                                 />
                                </Button.Content>
                            </Button>
                        </Border>

                        <TextBox Text="{Binding SendMessageText.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="Wrap"
                                 MaxWidth="400"
                                 FontSize="20"
                                 PlaceholderText="{Binding Name, Converter={StaticResource TextChannelMessageInputPlaceholderConverter}}"
                                 Padding="16 8"
                                 tookitext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                                 InputScope="Chat"
                                 >
                            <i:Interaction.Behaviors>
                                <mybehavior:KeyboardTrigger Key="Enter">
                                    <core:InvokeCommandAction Command="{Binding SendMessageCommand}" />
                                </mybehavior:KeyboardTrigger>
                            </i:Interaction.Behaviors>
                        </TextBox>

                        <!-- 基本的にEnterで入力送信実行、ボタンは置かない？ -->

                    </toolkit:DockPanel>

                </Border>

                <!-- 最新投稿へスクロール -->
                <!-- XInputでは非表示に -->
                <!--
                <Border toolkit:DockPanel.Dock="Bottom"
                        Height="40"
                        x:Name="ScrollToLatestLayout"
                        IsHitTestVisible="True"
                        Background="Transparent"
                        >
                    <TextBlock Text="最新までスキップ" 
                               Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                               Margin="0 8"
                               HorizontalAlignment="Center"
                               />
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:CallMethodAction TargetObject="{x:Bind}" MethodName="ScrollToLatest" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Border>
                -->

                <ScrollViewer>

                    <i:Interaction.Behaviors>
                        <mybehavior:ScrollViewerAutoScrollToLatestItemBehavior
                            ObserveCollection="{Binding ElementName=MessagesItemsControl}"
                            />
                    </i:Interaction.Behaviors>
                    
                    <ItemsControl ItemsSource="{Binding Messages}"
                                ItemTemplate="{StaticResource MessageTemplate}"
                                Margin="8 0 16 0"
                                  x:Name="MessagesItemsControl"
                                  
                            >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VerticalAlignment="Bottom"
                                                    >
                                </VirtualizingStackPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>

            </toolkit:DockPanel>




        </Grid>
    </Grid>
</Page>
